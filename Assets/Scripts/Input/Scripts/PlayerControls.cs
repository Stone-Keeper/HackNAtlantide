//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Input/Scripts/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""InGame"",
            ""id"": ""345a378c-9aca-4498-a656-51e7f1d735d7"",
            ""actions"": [
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""ec5f8e4f-0562-4d94-bdd8-4bacb7f3f1ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""f5b2189c-d437-45a3-a247-fce2f1d55862"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""9fd6959b-1c78-4106-8328-2e9892fa435a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""c141ba68-9439-412c-80d3-e265cf4937d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DashAttack"",
                    ""type"": ""Button"",
                    ""id"": ""77e60b25-c7be-4d96-aa86-0cd79896117e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Focus"",
                    ""type"": ""Button"",
                    ""id"": ""99fd06d9-00d4-45c6-b8e1-1d6a28706af0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchFocus"",
                    ""type"": ""Value"",
                    ""id"": ""accf1927-d9ad-41af-9d52-c4e86eefc9f4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""3cf6f724-1905-40ef-a4aa-07f4bf2ee77b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Boussole"",
                    ""type"": ""Button"",
                    ""id"": ""ee7bc772-9438-422a-a40f-abd2b0b44e7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Release"",
                    ""type"": ""Button"",
                    ""id"": ""0cfc96d6-e9d1-4de1-84ac-1db5384648b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Book"",
                    ""type"": ""Button"",
                    ""id"": ""e79f226c-6fa3-4cdc-8d8e-af4e8034fe3a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CheatMenu"",
                    ""type"": ""Button"",
                    ""id"": ""f66edcc1-8705-45b1-a61f-263079284b98"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""40e1e8fe-65e3-4b68-901a-194cc12d7eab"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eed49afc-16df-46ae-b4b3-e2268b52a236"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc13820f-1b8e-4f6c-b080-aca5cfdcd76b"",
                    ""path"": ""<DualShockGamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9b6b0f9-dc94-4b6a-bad2-bcb51c81d8fb"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""b004313e-57e6-421a-9626-97d03a26304a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a3b8c0a2-f9d0-4b09-970e-1103f14d5fc4"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7c2e8e04-1cea-4a04-aff3-5ad47f4bd91d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5c7d5eb8-0166-477d-822d-4e8249de0aaa"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9abe5464-ad5a-48e3-b9d1-4c2fefb2da6c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c3d0292d-1812-476c-91c8-e1b5de3f28e7"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1252d55c-37f7-49f9-8caf-8528486a8bfa"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2071bb1b-3518-4f86-a5c1-10f717bdef1b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2dd1060-0f76-4590-816b-8d07a0e1160f"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Focus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7d4c5b6-83ed-42ba-9403-bb913ccd5ff4"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Focus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fee35aa-b9b4-4e3f-ba9e-54de014f38e2"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SwitchFocus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6a98e5b-cc98-4983-b375-ff5ab7b09ca0"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""SwitchFocus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35e27e3c-927c-4f31-bcd9-15d4a2b9fae7"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b15e910f-11b9-4e9d-b69d-276a302b5a2d"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""836e109d-c162-43f5-a523-084b76139b64"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Boussole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab81de05-b3e1-422a-a817-a2953080d82b"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Boussole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6823d1f-6c90-471a-999a-d19e5b1b0673"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Book"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""abbdc004-e164-467a-8cd4-a192d6a72bbf"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Book"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34a2fde3-706a-4f80-b767-27234ca09ae5"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DashAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29312186-d30e-45db-a5e4-c0d6d933edec"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""DashAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c2272e6-165c-4bf3-8705-5d62786eb1c1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3c75504-b160-40b6-9469-2b3e8f405c20"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CheatMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c550748-75e4-4aaf-b515-154c86e331a9"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CheatMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""binding"",
            ""id"": ""5d56d6ae-9769-495d-81be-73c2883b7ac5"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""f0b0d81a-34ff-4f10-b577-1c03c230ba40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8c740750-a1ed-4c89-bd47-ce6cbc5845d9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<DualShockGamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // InGame
        m_InGame = asset.FindActionMap("InGame", throwIfNotFound: true);
        m_InGame_Interact = m_InGame.FindAction("Interact", throwIfNotFound: true);
        m_InGame_Move = m_InGame.FindAction("Move", throwIfNotFound: true);
        m_InGame_Dash = m_InGame.FindAction("Dash", throwIfNotFound: true);
        m_InGame_Attack = m_InGame.FindAction("Attack", throwIfNotFound: true);
        m_InGame_DashAttack = m_InGame.FindAction("DashAttack", throwIfNotFound: true);
        m_InGame_Focus = m_InGame.FindAction("Focus", throwIfNotFound: true);
        m_InGame_SwitchFocus = m_InGame.FindAction("SwitchFocus", throwIfNotFound: true);
        m_InGame_Pause = m_InGame.FindAction("Pause", throwIfNotFound: true);
        m_InGame_Boussole = m_InGame.FindAction("Boussole", throwIfNotFound: true);
        m_InGame_Release = m_InGame.FindAction("Release", throwIfNotFound: true);
        m_InGame_Book = m_InGame.FindAction("Book", throwIfNotFound: true);
        m_InGame_CheatMenu = m_InGame.FindAction("CheatMenu", throwIfNotFound: true);
        // binding
        m_binding = asset.FindActionMap("binding", throwIfNotFound: true);
        m_binding_Newaction = m_binding.FindAction("New action", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InGame
    private readonly InputActionMap m_InGame;
    private IInGameActions m_InGameActionsCallbackInterface;
    private readonly InputAction m_InGame_Interact;
    private readonly InputAction m_InGame_Move;
    private readonly InputAction m_InGame_Dash;
    private readonly InputAction m_InGame_Attack;
    private readonly InputAction m_InGame_DashAttack;
    private readonly InputAction m_InGame_Focus;
    private readonly InputAction m_InGame_SwitchFocus;
    private readonly InputAction m_InGame_Pause;
    private readonly InputAction m_InGame_Boussole;
    private readonly InputAction m_InGame_Release;
    private readonly InputAction m_InGame_Book;
    private readonly InputAction m_InGame_CheatMenu;
    public struct InGameActions
    {
        private @PlayerControls m_Wrapper;
        public InGameActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interact => m_Wrapper.m_InGame_Interact;
        public InputAction @Move => m_Wrapper.m_InGame_Move;
        public InputAction @Dash => m_Wrapper.m_InGame_Dash;
        public InputAction @Attack => m_Wrapper.m_InGame_Attack;
        public InputAction @DashAttack => m_Wrapper.m_InGame_DashAttack;
        public InputAction @Focus => m_Wrapper.m_InGame_Focus;
        public InputAction @SwitchFocus => m_Wrapper.m_InGame_SwitchFocus;
        public InputAction @Pause => m_Wrapper.m_InGame_Pause;
        public InputAction @Boussole => m_Wrapper.m_InGame_Boussole;
        public InputAction @Release => m_Wrapper.m_InGame_Release;
        public InputAction @Book => m_Wrapper.m_InGame_Book;
        public InputAction @CheatMenu => m_Wrapper.m_InGame_CheatMenu;
        public InputActionMap Get() { return m_Wrapper.m_InGame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InGameActions set) { return set.Get(); }
        public void SetCallbacks(IInGameActions instance)
        {
            if (m_Wrapper.m_InGameActionsCallbackInterface != null)
            {
                @Interact.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnInteract;
                @Move.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnMove;
                @Dash.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnDash;
                @Attack.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnAttack;
                @DashAttack.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnDashAttack;
                @DashAttack.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnDashAttack;
                @DashAttack.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnDashAttack;
                @Focus.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnFocus;
                @Focus.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnFocus;
                @Focus.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnFocus;
                @SwitchFocus.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnSwitchFocus;
                @SwitchFocus.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnSwitchFocus;
                @SwitchFocus.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnSwitchFocus;
                @Pause.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnPause;
                @Boussole.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnBoussole;
                @Boussole.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnBoussole;
                @Boussole.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnBoussole;
                @Release.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnRelease;
                @Release.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnRelease;
                @Release.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnRelease;
                @Book.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnBook;
                @Book.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnBook;
                @Book.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnBook;
                @CheatMenu.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnCheatMenu;
                @CheatMenu.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnCheatMenu;
                @CheatMenu.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnCheatMenu;
            }
            m_Wrapper.m_InGameActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @DashAttack.started += instance.OnDashAttack;
                @DashAttack.performed += instance.OnDashAttack;
                @DashAttack.canceled += instance.OnDashAttack;
                @Focus.started += instance.OnFocus;
                @Focus.performed += instance.OnFocus;
                @Focus.canceled += instance.OnFocus;
                @SwitchFocus.started += instance.OnSwitchFocus;
                @SwitchFocus.performed += instance.OnSwitchFocus;
                @SwitchFocus.canceled += instance.OnSwitchFocus;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Boussole.started += instance.OnBoussole;
                @Boussole.performed += instance.OnBoussole;
                @Boussole.canceled += instance.OnBoussole;
                @Release.started += instance.OnRelease;
                @Release.performed += instance.OnRelease;
                @Release.canceled += instance.OnRelease;
                @Book.started += instance.OnBook;
                @Book.performed += instance.OnBook;
                @Book.canceled += instance.OnBook;
                @CheatMenu.started += instance.OnCheatMenu;
                @CheatMenu.performed += instance.OnCheatMenu;
                @CheatMenu.canceled += instance.OnCheatMenu;
            }
        }
    }
    public InGameActions @InGame => new InGameActions(this);

    // binding
    private readonly InputActionMap m_binding;
    private IBindingActions m_BindingActionsCallbackInterface;
    private readonly InputAction m_binding_Newaction;
    public struct BindingActions
    {
        private @PlayerControls m_Wrapper;
        public BindingActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_binding_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_binding; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BindingActions set) { return set.Get(); }
        public void SetCallbacks(IBindingActions instance)
        {
            if (m_Wrapper.m_BindingActionsCallbackInterface != null)
            {
                @Newaction.started -= m_Wrapper.m_BindingActionsCallbackInterface.OnNewaction;
                @Newaction.performed -= m_Wrapper.m_BindingActionsCallbackInterface.OnNewaction;
                @Newaction.canceled -= m_Wrapper.m_BindingActionsCallbackInterface.OnNewaction;
            }
            m_Wrapper.m_BindingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }
        }
    }
    public BindingActions @binding => new BindingActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IInGameActions
    {
        void OnInteract(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnDashAttack(InputAction.CallbackContext context);
        void OnFocus(InputAction.CallbackContext context);
        void OnSwitchFocus(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnBoussole(InputAction.CallbackContext context);
        void OnRelease(InputAction.CallbackContext context);
        void OnBook(InputAction.CallbackContext context);
        void OnCheatMenu(InputAction.CallbackContext context);
    }
    public interface IBindingActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
